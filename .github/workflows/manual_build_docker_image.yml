# This is a basic workflow to help you get started with Actions

name: 手动触发构建镜像到docker仓库和GHCR仓库

# Controls when the action will run. 
on:
  # 任意推送都会触发构建
  #push:
# 定时调度
  #schedule:
    #- cron: "0 0 * * 1"

  # Allows you to run this workflow manually from the Actions tab
# 可以手动触发
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'   
        required: true
        default: 'warning'
      tags:
        description: 'tags：请填写镜像版本号，默认值1.0'
        required: true
        default: '1.0'


jobs:
  buildx:
    runs-on: ubuntu-latest
    
    # 这里用于定义 GITHUB_TOKEN 的权限
    permissions:
       packages: write
       contents: read
    
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Get current date
        id: date
        run: echo "::set-output name=today::$(date +'%Y-%m-%d')"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # 去secrets中添加
          password: ${{ secrets.DOCKER_PASSWORD }}  # 去secrets中添加
      - 
        name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: image Name change
        id: read-docker-image-identifiers   # 去secrets中添加DOCKER_IMAGENAME 镜像名称，自动字母大写转换小写。
        run: |
          echo DOCKER_IMAGENAME=$(echo ${{ secrets.DOCKER_IMAGENAME }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      -
        name: Extract metadata (tags, labels) for Docker
        id: meta   # 处理并输出镜像tag版本号
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGENAME }}    # 推送到docker仓库，如不需要请使用#注释
            ghcr.io/${{ github.repository_owner }}/${{ env.DOCKER_IMAGENAME }}   # 推送到GitHub packages仓库，如不需要请使用#注释
        # generate Docker tags based on the following events/attributes   # 提醒：推送到GitHub packages仓库需要打开『 https://github.com/settings/tokens/new?scopes=write:packages 』创建一个 PAT，勾选 write:packages 权限，才可使用。
        # metadata 使用说明：https://github.com/docker/metadata-action
        #   latest, tags
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.event.inputs.tags }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .	# 工作目录
          file: ./Dockerfile	#构建文件路径
# 所需要的体系结构，可以在 Available platforms 步骤中获取所有的可用架构【前提：基础镜像必须要有对应的架构，否则无法构建】
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          #platforms可选架构: linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/amd64/v4,linux/arm64,linux/riscv64,linux/ppc64le,linux/s390x,linux/386,linux/mips64le,linux/mips64,linux/arm/v7,linux/arm/v6
# 镜像推送时间
          push: ${{ github.event_name != 'pull_request' }}
# 给清单打上多个tags标签  
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
              


